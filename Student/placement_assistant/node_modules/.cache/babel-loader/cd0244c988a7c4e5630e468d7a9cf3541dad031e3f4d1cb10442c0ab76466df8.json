{"ast":null,"code":"var _jsxFileName = \"E:\\\\Nency\\\\MSc CS\\\\Sem-V\\\\Project-III\\\\Student\\\\placement_assistant\\\\src\\\\Components\\\\AgreementForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './AgreementForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AgreementForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    course: \"\",\n    semester: \"\",\n    confirmOption: \"\",\n    file: null\n  });\n  const [fileError, setFileError] = useState(\"\");\n  const [hasSubmitted, setHasSubmitted] = useState(false); // This tracks if the user has already submitted the form\n\n  const courses = [\"MCA\", \"M.Sc(AI&ML)\", \"M.Sc(DS)\", \"M.Tech(NT)\", \"M.Tech(WT)\"];\n  const confirm = [\"Yes\", \"No\"];\n  const agree = [\"I agree to all the terms and conditions mentioned\"];\n\n  // On load, check if the user has already submitted the form\n  useEffect(() => {\n    const checkSubmissionStatus = async () => {\n      try {\n        const email = localStorage.getItem('userEmail'); // Replace with dynamic user email, e.g., from auth state\n        const response = await fetch(`http://localhost:8080/api/user/hasSubmitted?email=${email}`);\n        if (response.ok) {\n          const data = await response.json();\n          setHasSubmitted(data); // If true, the form is already submitted\n        } else {\n          setHasSubmitted(false);\n        }\n      } catch (error) {\n        console.error(\"Error checking submission status:\", error);\n        setHasSubmitted(false);\n      }\n    };\n    checkSubmissionStatus();\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file && file.size > 10 * 1024 * 1024) {\n      setFileError(\"File size must not exceed 10MB.\");\n      setFormData({\n        ...formData,\n        file: null\n      });\n    } else {\n      setFileError(\"\");\n      setFormData({\n        ...formData,\n        file\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formDataObject = new FormData();\n    formDataObject.append(\"name\", formData.name);\n    formDataObject.append(\"email\", formData.email);\n    formDataObject.append(\"phone\", formData.phone);\n    formDataObject.append(\"course\", formData.course);\n    formDataObject.append(\"semester\", formData.semester);\n    formDataObject.append(\"confirm\", formData.confirmOption);\n    formDataObject.append(\"agree\", formData.agree);\n    if (formData.file) {\n      formDataObject.append(\"file\", formData.file);\n    }\n    try {\n      const response = await fetch(\"http://localhost:8080/api/agreements\", {\n        method: \"POST\",\n        body: formDataObject\n      });\n      if (response.ok) {\n        setHasSubmitted(true); // Disable the form and indicate successful submission\n        alert(\"Form submitted successfully!\");\n\n        // Update submission status in backend\n        const email = formData.email; // Use logged-in user's email\n        const updateResponse = await fetch(`http://localhost:8080/api/user/updateHasSubmitted?email=${email}`, {\n          method: \"POST\"\n        });\n        if (updateResponse.ok) {\n          console.log(\"User submission status updated successfully.\");\n        } else {\n          alert(\"Failed to update submission status.\");\n        }\n      } else {\n        const error = await response.text();\n        alert(\"Error submitting form: \" + error);\n      }\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n      alert(\"Something went wrong. Please try again.\");\n    }\n  };\n  if (hasSubmitted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AgreementForm_Container\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Thank you for submitting the agreement! You cannot submit the form again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AgreementForm_Container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Student Agreement Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              className: \"form-label\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"name\",\n              name: \"name\",\n              value: formData.name,\n              onChange: handleChange,\n              required: true,\n              disabled: hasSubmitted // Disable input if form is already submitted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"form-label\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              id: \"email\",\n              name: \"email\",\n              value: formData.email,\n              onChange: handleChange,\n              required: true,\n              disabled: hasSubmitted // Disable input if form is already submitted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"phone\",\n              className: \"form-label\",\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              className: \"form-control\",\n              id: \"phone\",\n              name: \"phone\",\n              value: formData.phone,\n              onChange: handleChange,\n              required: true,\n              disabled: hasSubmitted // Disable input if form is already submitted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"course\",\n              className: \"form-label\",\n              children: \"Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              id: \"course\",\n              name: \"course\",\n              value: formData.course,\n              onChange: handleChange,\n              required: true,\n              disabled: hasSubmitted // Disable dropdown if form is already submitted\n              ,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a course\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this), courses.map((course, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: course,\n                children: course\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Semester\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              name: \"semester\",\n              value: formData.semester,\n              onChange: handleChange,\n              required: true,\n              disabled: hasSubmitted // Disable input if form is already submitted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Would you like to sit for the placement process?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: confirm.map((confirm, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check form-check-inline\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-check-input\",\n                  type: \"radio\",\n                  name: \"confirm\",\n                  id: `confirm-${index}`,\n                  value: confirm,\n                  onChange: handleChange,\n                  required: true,\n                  disabled: hasSubmitted // Disable input if form is already submitted\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  htmlFor: `confirm-${index}`,\n                  children: confirm\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), \"Read the following document carefully, print it, sign it, then scan the signed copy and upload it in the next section.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-section mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Agreement Document\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/Images/consent.jpeg\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/Images/consent.jpeg\",\n                alt: \"Agreement Document\",\n                height: \"100px\",\n                width: \"100px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"file\",\n              className: \"form-label\",\n              children: \"Upload File (Max: 10MB)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"form-control\",\n              id: \"file\",\n              name: \"file\",\n              onChange: handleFileChange,\n              required: true,\n              disabled: hasSubmitted // Disable input if form is already submitted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), fileError && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: fileError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            disabled: hasSubmitted,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(AgreementForm, \"59mdUA9MUyKPOGF7Y9oyllwhVr0=\");\n_c = AgreementForm;\nexport default AgreementForm;\nvar _c;\n$RefreshReg$(_c, \"AgreementForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AgreementForm","_s","formData","setFormData","name","email","phone","course","semester","confirmOption","file","fileError","setFileError","hasSubmitted","setHasSubmitted","courses","confirm","agree","checkSubmissionStatus","localStorage","getItem","response","fetch","ok","data","json","error","console","handleChange","e","value","target","handleFileChange","files","size","handleSubmit","preventDefault","formDataObject","FormData","append","method","body","alert","updateResponse","log","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","disabled","map","index","href","rel","src","alt","height","width","_c","$RefreshReg$"],"sources":["E:/Nency/MSc CS/Sem-V/Project-III/Student/placement_assistant/src/Components/AgreementForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './AgreementForm.css';\r\n\r\nfunction AgreementForm() {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    course: \"\",\r\n    semester: \"\",\r\n    confirmOption: \"\",\r\n    file: null,\r\n  });\r\n\r\n  const [fileError, setFileError] = useState(\"\");\r\n  const [hasSubmitted, setHasSubmitted] = useState(false); // This tracks if the user has already submitted the form\r\n\r\n  const courses = [\"MCA\", \"M.Sc(AI&ML)\", \"M.Sc(DS)\", \"M.Tech(NT)\", \"M.Tech(WT)\"];\r\n  const confirm = [\"Yes\", \"No\"];\r\n  const agree = [\"I agree to all the terms and conditions mentioned\"];\r\n\r\n  // On load, check if the user has already submitted the form\r\n  useEffect(() => {\r\n    const checkSubmissionStatus = async () => {\r\n      try {\r\n        const email = localStorage.getItem('userEmail'); // Replace with dynamic user email, e.g., from auth state\r\n        const response = await fetch(`http://localhost:8080/api/user/hasSubmitted?email=${email}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setHasSubmitted(data); // If true, the form is already submitted\r\n        } else {\r\n          setHasSubmitted(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error checking submission status:\", error);\r\n        setHasSubmitted(false);\r\n      }\r\n    };\r\n\r\n    checkSubmissionStatus();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file && file.size > 10 * 1024 * 1024) {\r\n      setFileError(\"File size must not exceed 10MB.\");\r\n      setFormData({ ...formData, file: null });\r\n    } else {\r\n      setFileError(\"\");\r\n      setFormData({ ...formData, file });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    const formDataObject = new FormData();\r\n\r\n    formDataObject.append(\"name\", formData.name);\r\n    formDataObject.append(\"email\", formData.email);\r\n    formDataObject.append(\"phone\", formData.phone);\r\n    formDataObject.append(\"course\", formData.course);\r\n    formDataObject.append(\"semester\", formData.semester);\r\n    formDataObject.append(\"confirm\", formData.confirmOption);\r\n    formDataObject.append(\"agree\", formData.agree);\r\n    if (formData.file) {\r\n      formDataObject.append(\"file\", formData.file);\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/api/agreements\", {\r\n        method: \"POST\",\r\n        body: formDataObject,\r\n      });\r\n\r\n      if (response.ok) {\r\n        setHasSubmitted(true); // Disable the form and indicate successful submission\r\n        alert(\"Form submitted successfully!\");\r\n\r\n        // Update submission status in backend\r\n        const email = formData.email; // Use logged-in user's email\r\n        const updateResponse = await fetch(`http://localhost:8080/api/user/updateHasSubmitted?email=${email}`, {\r\n          method: \"POST\",\r\n        });\r\n\r\n        if (updateResponse.ok) {\r\n          console.log(\"User submission status updated successfully.\");\r\n        } else {\r\n          alert(\"Failed to update submission status.\");\r\n        }\r\n      } else {\r\n        const error = await response.text();\r\n        alert(\"Error submitting form: \" + error);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting form:\", error);\r\n      alert(\"Something went wrong. Please try again.\");\r\n    }\r\n  };\r\n\r\n  if (hasSubmitted) {\r\n    return (\r\n      <div className=\"AgreementForm_Container\">\r\n        <h2>Thank you for submitting the agreement! You cannot submit the form again.</h2>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"AgreementForm_Container\">\r\n        <h2>Student Agreement Form</h2>\r\n        <div className=\"form-container\">\r\n          <form onSubmit={handleSubmit}>\r\n            {/* Name Field */}\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\" className=\"form-label\">\r\n                Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={hasSubmitted} // Disable input if form is already submitted\r\n              />\r\n            </div>\r\n\r\n            {/* Email Field */}\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\" className=\"form-label\">\r\n                Email\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={hasSubmitted} // Disable input if form is already submitted\r\n              />\r\n            </div>\r\n\r\n            {/* Phone Number Field */}\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"phone\" className=\"form-label\">\r\n                Phone Number\r\n              </label>\r\n              <input\r\n                type=\"tel\"\r\n                className=\"form-control\"\r\n                id=\"phone\"\r\n                name=\"phone\"\r\n                value={formData.phone}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={hasSubmitted} // Disable input if form is already submitted\r\n              />\r\n            </div>\r\n\r\n            {/* Course Dropdown */}\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"course\" className=\"form-label\">\r\n                Course\r\n              </label>\r\n              <select\r\n                className=\"form-select\"\r\n                id=\"course\"\r\n                name=\"course\"\r\n                value={formData.course}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={hasSubmitted} // Disable dropdown if form is already submitted\r\n              >\r\n                <option value=\"\">Select a course</option>\r\n                {courses.map((course, index) => (\r\n                  <option key={index} value={course}>\r\n                    {course}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            {/* Semester Field */}\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Semester</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"semester\"\r\n                value={formData.semester}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={hasSubmitted} // Disable input if form is already submitted\r\n              />\r\n            </div>\r\n\r\n            {/* Confirm Field */}\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">\r\n                Would you like to sit for the placement process?\r\n              </label>\r\n              <div>\r\n                {confirm.map((confirm, index) => (\r\n                  <div className=\"form-check form-check-inline\" key={index}>\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      name=\"confirm\"\r\n                      id={`confirm-${index}`}\r\n                      value={confirm}\r\n                      onChange={handleChange}\r\n                      required\r\n                      disabled={hasSubmitted} // Disable input if form is already submitted\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor={`confirm-${index}`}>\r\n                      {confirm}\r\n                    </label>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              Read the following document carefully, print it, sign it, then scan the signed copy and upload it in the next section.\r\n            </div>\r\n\r\n            {/* Agreement Document */}\r\n            <div className=\"image-section mt-3\">\r\n              <label className=\"form-label\">Agreement Document</label>\r\n              <br />\r\n              <a href=\"/Images/consent.jpeg\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <img src=\"/Images/consent.jpeg\" alt=\"Agreement Document\" height=\"100px\" width=\"100px\" />\r\n              </a>\r\n            </div>\r\n\r\n            {/* File Upload Field */}\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"file\" className=\"form-label\">\r\n                Upload File (Max: 10MB)\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                className=\"form-control\"\r\n                id=\"file\"\r\n                name=\"file\"\r\n                onChange={handleFileChange}\r\n                required\r\n                disabled={hasSubmitted} // Disable input if form is already submitted\r\n              />\r\n              {fileError && <small className=\"text-danger\">{fileError}</small>}\r\n            </div>\r\n\r\n            {/* Submit Button */}\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={hasSubmitted}>\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AgreementForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}