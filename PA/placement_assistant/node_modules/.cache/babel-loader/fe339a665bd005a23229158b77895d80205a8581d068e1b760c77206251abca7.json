{"ast":null,"code":"var _jsxFileName = \"E:\\\\Nency\\\\MSc CS\\\\Sem-V\\\\Project-III\\\\Test\\\\placement_assistant\\\\src\\\\Components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport StudentService from \"../Services/StudentServices\";\nimport StudentTable from \"./StudentTable\";\nimport Filters from \"./Filters\";\nimport { jsPDF } from \"jspdf\"; // Import jsPDF\nimport \"jspdf-autotable\";\nimport StudentDetails from \"./StudentDetails\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  selectedMenu\n}) => {\n  _s();\n  const [studentOption, setStudentOption] = useState(\"ViewDetails\"); // Default to \"ViewDetails\"\n  const [students, setStudents] = useState([]);\n  const [filteredStudents, setFilteredStudents] = useState([]);\n  const [selectedStudent, setSelectedStudent] = useState(null); // Track the selected student\n  const [activeFilters, setActiveFilters] = useState({}); // Store current filter criteria\n\n  // Fetching student data from the API on component mount\n  useEffect(() => {\n    StudentService.getStudents().then(response => {\n      setStudents(response.data);\n      setFilteredStudents(response.data);\n    }).catch(error => console.error(\"Error fetching students:\", error));\n  }, []);\n\n  // Handling button click to select options\n  const handleOptionClick = option => {\n    setStudentOption(option); // Set the currently selected option\n    setSelectedStudent(null); // Reset selected student when changing options\n  };\n\n  // Handling filter logic\n  const handleFilter = (key, value) => {\n    const updatedFilters = {\n      ...activeFilters,\n      [key]: value\n    }; // Update active filters\n    setActiveFilters(updatedFilters); // Save the active filters\n\n    // Apply filters dynamically\n    let filtered = [...students];\n    if (updatedFilters.batch) {\n      filtered = filtered.filter(s => s.batch === updatedFilters.batch);\n    }\n    if (updatedFilters.program) {\n      filtered = filtered.filter(s => s.course === updatedFilters.program);\n    }\n    if (updatedFilters.search) {\n      filtered = filtered.filter(s => s.name.toLowerCase().includes(updatedFilters.search.toLowerCase()));\n    }\n    if (updatedFilters.sscPercentage) {\n      filtered = filtered.filter(s => s.ssc.percentage <= parseInt(updatedFilters.sscPercentage, 10));\n    }\n    if (updatedFilters.hscPercentage) {\n      filtered = filtered.filter(s => s.hsc.percentage <= parseInt(updatedFilters.hscPercentage, 10));\n    }\n    if (updatedFilters.bachelorPercentage) {\n      filtered = filtered.filter(s => s.bachelor.percentage <= parseInt(updatedFilters.bachelorPercentage, 10));\n    }\n    if (updatedFilters.drops) {\n      filtered = filtered.filter(s => s.drops === parseInt(updatedFilters.drops, 10));\n    }\n    setFilteredStudents(filtered);\n  };\n\n  // Reapply filters dynamically when students change\n  useEffect(() => {\n    handleFilter(\"\", \"\"); // Reapply filters on student data update\n  }, [students]);\n\n  // Delete student\n  const onDelete = eno => {\n    const updatedStudents = students.filter(student => student.eno !== eno);\n    setStudents(updatedStudents); // Update the state to remove the student\n    setFilteredStudents(updatedStudents); // Update the filtered list as well\n  };\n\n  // Download filtered data as CSV\n  const downloadFilteredCSV = () => {\n    const headers = [\"Sr. No\", \"Name\", \"Batch\", \"Program\", \"Email\", \"Phone Number\", \"Date of Birth\", \"Gender\", \"SSC Percentage\", \"HSC Percentage\", \"Bachelor Percentage\"];\n    const rows = filteredStudents.map((student, index) => [index + 1, student.name, student.batch, student.course, student.email, student.phno, student.dob, student.gender, student.ssc.percentage, student.hsc.percentage, student.bachelor.percentage]);\n    const csvContent = [headers.join(\",\"),\n    // Join headers with commas\n    ...rows.map(row => row.join(\",\")) // Join each row with commas\n    ].join(\"\\n\"); // Join all rows with a newline\n    const blob = new Blob([csvContent], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", url);\n    link.setAttribute(\"download\", \"filtered_students.csv\"); // Default file name for download\n    link.click();\n  };\n\n  // Download filtered data as PDF\n  const downloadFilteredPDF = () => {\n    const doc = new jsPDF();\n    doc.setFontSize(16);\n    doc.text(\"Filtered Student Details\", 10, 10);\n    const headers = [\"Sr. No\", \"Name\", \"Batch\", \"Program\", \"Email\", \"Phone\", \"SSC %\", \"HSC %\", \"Bachelor %\"];\n    const rows = filteredStudents.map((student, index) => [index + 1, student.name, student.batch, student.course, student.email, student.phno, student.ssc.percentage, student.hsc.percentage, student.bachelor.percentage]);\n    doc.autoTable({\n      head: [headers],\n      body: rows,\n      startY: 20\n    });\n    doc.save(\"filtered_students.pdf\");\n  };\n\n  // Handling student selection for details view\n  const handleViewStudent = student => {\n    setSelectedStudent(student); // Set the selected student\n  };\n\n  // Render content based on studentOption\n  const renderStudentContent = () => {\n    if (studentOption === \"EnterDetails\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Enter Student Details Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 14\n      }, this);\n    }\n    if (studentOption === \"ViewDetails\") {\n      if (selectedStudent) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"viewdetails\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"back-btn\",\n            onClick: () => setSelectedStudent(null) // Go back to table\n            ,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/Images/Back.png\",\n              height: \"25px\",\n              width: \"25px\",\n              alt: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StudentDetails, {\n            student: selectedStudent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"viewdetails\",\n          children: [/*#__PURE__*/_jsxDEV(Filters, {\n            onFilter: handleFilter,\n            downloadCSV: downloadFilteredCSV,\n            downloadPDF: downloadFilteredPDF\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StudentTable, {\n            students: filteredStudents,\n            onView: handleViewStudent,\n            onDelete: onDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this);\n      }\n    }\n    if (studentOption === \"DownloadReports\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Download Reports Section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 14\n      }, this);\n    }\n    return null;\n  };\n\n  // Main rendering logic\n  const rendersContent = () => {\n    if (selectedMenu === \"Student\") {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"breadcrumb\",\n          children: \"Dashboard > Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleOptionClick(\"EnterDetails\"),\n            children: \"Enter Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleOptionClick(\"DownloadReports\"),\n            children: \"Download Reports\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleOptionClick(\"ViewDetails\"),\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-section\",\n          children: renderStudentContent()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"placeholder\",\n      children: \"Select an option from the menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: rendersContent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 10\n  }, this);\n};\n_s(Dashboard, \"2xISgtejtvDHFzMepYaOto7Mlj4=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","StudentService","StudentTable","Filters","jsPDF","StudentDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","selectedMenu","_s","studentOption","setStudentOption","students","setStudents","filteredStudents","setFilteredStudents","selectedStudent","setSelectedStudent","activeFilters","setActiveFilters","getStudents","then","response","data","catch","error","console","handleOptionClick","option","handleFilter","key","value","updatedFilters","filtered","batch","filter","s","program","course","search","name","toLowerCase","includes","sscPercentage","ssc","percentage","parseInt","hscPercentage","hsc","bachelorPercentage","bachelor","drops","onDelete","eno","updatedStudents","student","downloadFilteredCSV","headers","rows","map","index","email","phno","dob","gender","csvContent","join","row","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","setAttribute","click","downloadFilteredPDF","doc","setFontSize","text","autoTable","head","body","startY","save","handleViewStudent","renderStudentContent","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","src","height","width","alt","onFilter","downloadCSV","downloadPDF","onView","rendersContent","_c","$RefreshReg$"],"sources":["E:/Nency/MSc CS/Sem-V/Project-III/Test/placement_assistant/src/Components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport StudentService from \"../Services/StudentServices\"; \r\nimport StudentTable from \"./StudentTable\";\r\nimport Filters from \"./Filters\";\r\nimport { jsPDF } from \"jspdf\"; // Import jsPDF\r\nimport \"jspdf-autotable\"; \r\nimport StudentDetails from \"./StudentDetails\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst Dashboard = ({ selectedMenu }) => {\r\n  const [studentOption, setStudentOption] = useState(\"ViewDetails\"); // Default to \"ViewDetails\"\r\n  const [students, setStudents] = useState([]);\r\n  const [filteredStudents, setFilteredStudents] = useState([]);\r\n  const [selectedStudent, setSelectedStudent] = useState(null); // Track the selected student\r\n  const [activeFilters, setActiveFilters] = useState({}); // Store current filter criteria\r\n\r\n  // Fetching student data from the API on component mount\r\n  useEffect(() => {\r\n    StudentService.getStudents()\r\n      .then((response) => {\r\n        setStudents(response.data);\r\n        setFilteredStudents(response.data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching students:\", error));\r\n  }, []);\r\n\r\n  // Handling button click to select options\r\n  const handleOptionClick = (option) => {\r\n    setStudentOption(option); // Set the currently selected option\r\n    setSelectedStudent(null); // Reset selected student when changing options\r\n  };\r\n\r\n  // Handling filter logic\r\n  const handleFilter = (key, value) => {\r\n    const updatedFilters = { ...activeFilters, [key]: value }; // Update active filters\r\n    setActiveFilters(updatedFilters); // Save the active filters\r\n\r\n    // Apply filters dynamically\r\n    let filtered = [...students];\r\n    if (updatedFilters.batch) {\r\n      filtered = filtered.filter((s) => s.batch === updatedFilters.batch);\r\n    }\r\n    if (updatedFilters.program) {\r\n      filtered = filtered.filter((s) => s.course === updatedFilters.program);\r\n    }\r\n    if (updatedFilters.search) {\r\n      filtered = filtered.filter((s) =>\r\n        s.name.toLowerCase().includes(updatedFilters.search.toLowerCase())\r\n      );\r\n    }\r\n    if (updatedFilters.sscPercentage) {\r\n      filtered = filtered.filter(\r\n        (s) => s.ssc.percentage <= parseInt(updatedFilters.sscPercentage, 10)\r\n      );\r\n    }\r\n    if (updatedFilters.hscPercentage) {\r\n      filtered = filtered.filter(\r\n        (s) => s.hsc.percentage <= parseInt(updatedFilters.hscPercentage, 10)\r\n      );\r\n    }\r\n    if (updatedFilters.bachelorPercentage) {\r\n      filtered = filtered.filter(\r\n        (s) => s.bachelor.percentage <= parseInt(updatedFilters.bachelorPercentage, 10)\r\n      );\r\n    }\r\n    if (updatedFilters.drops) {\r\n      filtered = filtered.filter((s) => s.drops === parseInt(updatedFilters.drops, 10));\r\n    }\r\n    setFilteredStudents(filtered);\r\n  };\r\n\r\n  // Reapply filters dynamically when students change\r\n  useEffect(() => {\r\n    handleFilter(\"\", \"\"); // Reapply filters on student data update\r\n  }, [students]);\r\n\r\n  // Delete student\r\n  const onDelete = (eno) => {\r\n    const updatedStudents = students.filter((student) => student.eno !== eno);\r\n    setStudents(updatedStudents); // Update the state to remove the student\r\n    setFilteredStudents(updatedStudents); // Update the filtered list as well\r\n  };\r\n\r\n  // Download filtered data as CSV\r\n  const downloadFilteredCSV = () => {\r\n    const headers = [\r\n      \"Sr. No\",\r\n      \"Name\",\r\n      \"Batch\",\r\n      \"Program\",\r\n      \"Email\",\r\n      \"Phone Number\",\r\n      \"Date of Birth\",\r\n      \"Gender\",\r\n      \"SSC Percentage\",\r\n      \"HSC Percentage\",\r\n      \"Bachelor Percentage\",\r\n    ];\r\n    const rows = filteredStudents.map((student, index) => [\r\n      index + 1,\r\n      student.name,\r\n      student.batch,\r\n      student.course,\r\n      student.email,\r\n      student.phno,\r\n      student.dob,\r\n      student.gender,\r\n      student.ssc.percentage,\r\n      student.hsc.percentage,\r\n      student.bachelor.percentage,\r\n    ]);\r\n    const csvContent = [\r\n      headers.join(\",\"), // Join headers with commas\r\n      ...rows.map((row) => row.join(\",\")) // Join each row with commas\r\n    ].join(\"\\n\"); // Join all rows with a newline\r\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", url);\r\n    link.setAttribute(\"download\", \"filtered_students.csv\"); // Default file name for download\r\n    link.click();\r\n  };\r\n\r\n  // Download filtered data as PDF\r\n  const downloadFilteredPDF = () => {\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(16);\r\n    doc.text(\"Filtered Student Details\", 10, 10);\r\n    const headers = [\r\n      \"Sr. No\",\r\n      \"Name\",\r\n      \"Batch\",\r\n      \"Program\",\r\n      \"Email\",\r\n      \"Phone\",\r\n      \"SSC %\",\r\n      \"HSC %\",\r\n      \"Bachelor %\",\r\n    ];\r\n    const rows = filteredStudents.map((student, index) => [\r\n      index + 1,\r\n      student.name,\r\n      student.batch,\r\n      student.course,\r\n      student.email,\r\n      student.phno,\r\n      student.ssc.percentage,\r\n      student.hsc.percentage,\r\n      student.bachelor.percentage,\r\n    ]);\r\n    doc.autoTable({\r\n      head: [headers],\r\n      body: rows,\r\n      startY: 20,\r\n    });\r\n    doc.save(\"filtered_students.pdf\");\r\n  };\r\n\r\n  // Handling student selection for details view\r\n  const handleViewStudent = (student) => {\r\n    setSelectedStudent(student); // Set the selected student\r\n  };\r\n\r\n  // Render content based on studentOption\r\n  const renderStudentContent = () => {\r\n    if (studentOption === \"EnterDetails\") {\r\n      return <div>Enter Student Details Form</div>;\r\n    }\r\n    if (studentOption === \"ViewDetails\") {\r\n      if (selectedStudent) {\r\n        return (\r\n          <div className=\"viewdetails\">\r\n            <button\r\n              className=\"back-btn\"\r\n              onClick={() => setSelectedStudent(null)} // Go back to table\r\n            >\r\n              <img src=\"/Images/Back.png\" height=\"25px\" width=\"25px\" alt=\"Back\" />\r\n            </button>\r\n            <StudentDetails student={selectedStudent} />\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div className=\"viewdetails\">\r\n            <Filters\r\n              onFilter={handleFilter}\r\n              downloadCSV={downloadFilteredCSV}\r\n              downloadPDF={downloadFilteredPDF}\r\n            />\r\n            <StudentTable\r\n              students={filteredStudents}\r\n              onView={handleViewStudent}\r\n              onDelete={onDelete}\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    if (studentOption === \"DownloadReports\") {\r\n      return <div>Download Reports Section</div>;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Main rendering logic\r\n  const rendersContent = () => {\r\n    if (selectedMenu === \"Student\") {\r\n      return (\r\n        <>\r\n          <div className=\"breadcrumb\">Dashboard &gt; Student</div>\r\n          <div className=\"buttons\">\r\n            <button onClick={() => handleOptionClick(\"EnterDetails\")}>Enter Details</button>\r\n            <button onClick={() => handleOptionClick(\"DownloadReports\")}>Download Reports</button>\r\n            <button onClick={() => handleOptionClick(\"ViewDetails\")}>View Details</button>\r\n          </div>\r\n          <div className=\"main-section\">{renderStudentContent()}</div>\r\n        </>\r\n      );\r\n    }\r\n    return <div className=\"placeholder\">Select an option from the menu</div>;\r\n  };\r\n\r\n  return <div className=\"dashboard\">{rendersContent()}</div>;\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}